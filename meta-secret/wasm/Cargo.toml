[package]
name = "meta-secret-wasm"
version = "0.1.0"
authors = ["cypherkitty <bynull@meta-secret.org>"]
edition = "2024"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
meta-secret-core = { path = "../core" }
meta-server-node = { path = "../meta-server/server-node" }
secrecy = "0.10.3"

anyhow.workspace = true

async-trait.workspace = true
serde.workspace = true

tracing.workspace = true
tracing-subscriber = { workspace = true, default-features = false, features = ["fmt", "ansi", "time"] }

# Add explicit uuid dependency for wasm
uuid.workspace = true

# Wasm dependencies
tracing-web = "0.1.3"

wasm-bindgen = { version = "0.2.100", features = ["serde-serialize"] }
rexie = "0.6.2"

serde-wasm-bindgen = "0.6.5"
wasm-bindgen-futures = "0.4.50"
time = { version = "0.3.41", features = ["wasm-bindgen"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

[dev-dependencies]
async-std = "1.13.0"
wasm-bindgen-test = "0.3.50"

[target.'cfg(target_arch = "wasm32")'.dependencies]
meta-secret-core = { path = "../core" }