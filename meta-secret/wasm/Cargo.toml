[package]
name = "meta-secret-wasm"
version = "0.1.0"
authors = ["cypherkitty <bynull@meta-secret.org>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
meta-secret-core = { path = "../core" }

anyhow.workspace = true
thiserror.workspace = true

async-trait.workspace = true
flume.workspace = true
async-mutex.workspace = true

serde.workspace = true
serde_json.workspace = true
serde_derive.workspace = true

tracing.workspace = true
tracing-subscriber = { workspace = true, default-features = false, features = ["fmt", "time"] }

getrandom.workspace = true

# Wasm dependencies
tracing-web = "0.1.3"

wasm-bindgen = { version = "0.2.95", features = ["serde-serialize"] }
rexie = "0.6.2"

serde-wasm-bindgen = "0.6.5"
wasm-bindgen-futures = "0.4.43"

js-sys = { version = "0.3.70" }
web-sys = { version = "0.3.70", features = [
    "DomException",
    "DomStringList",
    "Event",
    "StorageType",
    "Window"
] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
async-std = "1.13.0"

[dev-dependencies]
wasm-bindgen-test = "0.3.43"

[target.'cfg(target_arch = "wasm32")'.dependencies]
meta-secret-core = { path = "../core" }