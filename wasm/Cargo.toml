[package]
name = "meta-secret-web-cli"
version = "0.1.0"
authors = ["metabynull <bynull@metaelon.space>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[build]
target = "wasm32-unknown-unknown"

[features]
default = ["console_error_panic_hook"]

[dependencies]

tracing = "0.1.37"
tracing-subscriber = "0.3.17"

wasm-bindgen = { version = "0.2.87", features = ["serde-serialize"] }

gloo-timers = "0.2.6"

async-std = { version = "1.12.0", features = ["wasm-bindgen-futures", "futures-channel"] }
flume = "0.10.14"

async-trait = "0.1"
anyhow = "1.0"
thiserror = "1.0"

meta-secret-core = { path = "../core" }

serde = { version = "1.0.163", features = ["derive"] }
serde_json = "1.0.96"

serde-wasm-bindgen = "0.5.0"
wasm-bindgen-futures = "0.4.37"

js-sys = { version = "0.3.63" }
web-sys = { version = "0.3.60", features = [
    "DomException",
    "DomStringList",
    "Event",
    "StorageType",
    "Window"
] }

async-mutex = "1.4.0"

getrandom = { version = "0.2.8", features = ["js"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.37"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
